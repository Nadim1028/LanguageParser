#include<bits/stdc++.h>
using namespace std;
#define left 1
#define top  2
#define diagonal 3
int c[100][100], b[100][100];


void PRINT_LCS(int b[100][100],char X[],int m,int n)
{
    if(m==0 || n==0)
        return;

        if(b[m][n]==diagonal)
    {
        PRINT_LCS(b,X,m-1,n-1);
        cout<<X[m]<<" ";
    }
    else if(b[m][n]==top)
        PRINT_LCS(b,X,m-1,n);
    else
        PRINT_LCS(b,X,m,n-1);
}
 void LCS_LENGTH(char X[],char Y[],int m,int n)
 {
     for(int i=1;i<=m;i++)
        c[i][0]=0;

    for(int j=0;j<=n;j++)
        c[0][j]=0;

        for(i=1;i<=m;i++)
        {
            for(j=1;j<=n;j++)
            {
                if(X[i]==Y[j])
                {
                    c[i][j]=c[i-1][j-1]+1;
                    b[i][j]=diagonal;
                }
                else if(c[i-1][j]>=c[i][j-1])
                {
                    c[i][j]=c[i-1][j];
                    b[i][j]=top;
                }
                else
                {
                    c[i][j]=c[i][j-1];
                    b[i][j]=left;
                }
            }
        }

        cout<<"Length of the longest common subsequence is : "<<c[m][n]<<endl;

        PRINT_LCS(b,X,m,n);

 }
int main(void)
{
    char X[100],Y[100];
    int m,n,i,j;
    cout<<"Enter the length of 1st and 2nd character array : ";
    cin>>m>>n;

    for(i=1;i<=m;i++)
        cin>>X[i];

    for(j=1;j<=n;j++)
        cin>>Y[j];
        LCS_LENGTH(X,Y,m,n);
}
